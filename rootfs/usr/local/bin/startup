#!/bin/sh

## Variables
CSI="\033["
CEND="${CSI}0m"
CRED="${CSI}1;31m"
CGREEN="${CSI}1;32m"
CYELLOW="${CSI}1;33m"
CBLUE="${CSI}1;34m"

## Functions
f_log() {
    LOG_TYPE=$1
    LOG_MESSAGE=$2

    case "${LOG_TYPE}" in
    "INF")
        echo -e "${CBLUE}=INF= $(date +%Y/%m/%d-%H:%M:%S) ${LOG_MESSAGE}${CEND}"
        ;;
    "SUC")
        echo -e "${CGREEN}=SUC= $(date +%Y/%m/%d-%H:%M:%S) ${LOG_MESSAGE}${CEND}"
        ;;
    "WRN")
        echo -e "${CYELLOW}=WRN= $(date +%Y/%m/%d-%H:%M:%S) ${LOG_MESSAGE}${CEND}"
        ;;
    "ERR")
        echo -e "${CRED}=ERR= $(date +%Y/%m/%d-%H:%M:%S) ${LOG_MESSAGE}${CEND}"
        ;;
    esac
}

## Create user torrent
f_log INF "Create user torrent ..."
if [ "$(grep ':'${GID}':' /etc/group)" == "" ]; then
    addgroup -g ${GID} torrent
    GROUP_NAME=torrent
else
    GROUP_NAME=$(grep ':'${GID}':' /etc/group | cut -d: -f1)
fi
if [ "$(grep ${UID} /etc/passwd)" == "" ]; then
    adduser -h /home/torrent -s /bin/sh -G ${GROUP_NAME} -D -u ${UID} torrent
    USER_NAME=torrent
else
    USER_NAME=$(grep ${UID} /etc/passwd | cut -d: -f1)
fi
f_log SUC "Create user torrent done"

## Create require folder

mkdir -p /data/torrents /data/.watch /data/.session /config/rtorrent /config/rutorrent /config/custom_plugins /config/custom_themes /home/torrent

## Generate configuration
f_log INF "Generate configuration ..."
if [ "$WEBROOT" != "/" ]; then
    sed -i 's|<webroot>|'${WEBROOT}'|g' /etc/nginx/nginx.conf
    sed -i 's|<webroot_rpc>|'${WEBROOT}'|g' /etc/nginx/nginx.conf
    sed -i 's|<folder>||g' /etc/nginx/nginx.conf
    if [ "$WEBROOT" != "/torrent" ]; then
        mv /var/www/html/torrent /var/www/html${WEBROOT}
    fi
    sed -i 's|<webroot>|'${WEBROOT}'/|g' /var/www/html${WEBROOT}/conf/config.php

    ## Externalize rutorrent configuration
    if [ -d /config/rutorrent/conf ]; then
        rm -rf /var/www/html${WEBROOT}/conf
        ln -s /config/rutorrent/conf /var/www/html${WEBROOT}/conf
    else
        mv /var/www/html${WEBROOT}/conf /config/rutorrent/
        ln -s /config/rutorrent/conf /var/www/html${WEBROOT}/conf
    fi
    ## Externalize rutorrent share
    if [ -d /config/rutorrent/share ]; then
        rm -rf /var/www/html${WEBROOT}/share
        ln -s /config/rutorrent/share /var/www/html${WEBROOT}/share
    else
        mv /var/www/html${WEBROOT}/share /config/rutorrent/
        ln -s /config/rutorrent/share /var/www/html${WEBROOT}/share
    fi
    ## Add custom plugins
    [ "$(ls /config/custom_plugins/)" ] && for custom_plugin in $(ls /config/custom_plugins); do
        if [ ! -d /var/www/html${WEBROOT}/plugins/${custom_plugin} ]; then
            ln -s /config/custom_plugins/${custom_plugin} /var/www/html${WEBROOT}/plugins/${custom_plugin}
        fi
    done
    ## Add custom themes
    [ "$(ls /config/custom_themes/)" ] && for custom_theme in $(ls /config/custom_themes); do
        if [ ! -d /var/www/html${WEBROOT}/plugins/theme/themes/${custom_theme} ]; then
            ln -s /config/custom_themes/${custom_theme} /var/www/html${WEBROOT}/plugins/theme/themes/${custom_theme}
        fi
    done
else
    sed -i 's|<webroot>|/|g' /etc/nginx/nginx.conf
    sed -i 's|<webroot_rpc>/|/|g' /etc/nginx/nginx.conf
    sed -i 's|<folder>|/torrent|g' /etc/nginx/nginx.conf
    sed -i 's|<webroot>|/|g' /var/www/html/torrent/conf/config.php

    ## Externalize rutorrent configuration
    if [ -d /config/rutorrent/conf ]; then
        rm -rf /var/www/html/torrent/conf
        ln -s /config/rutorrent/conf /var/www/html/torrent/conf
    else
        mv /var/www/html/torrent/conf /config/rutorrent/
        ln -s /config/rutorrent/conf /var/www/html/torrent/conf
    fi
    ## Externalize rutorrent share
    if [ -d /config/rutorrent/share ]; then
        rm -rf /var/www/html/torrent/share
        ln -s /config/rutorrent/share /var/www/html/torrent/share
    else
        mv /var/www/html/torrent/share /config/rutorrent/
        ln -s /config/rutorrent/share /var/www/html/torrent/share
    fi
    ## Add custom plugins
    [ "$(ls /config/custom_plugins/)" ] && for custom_plugin in $(ls /config/custom_plugins); do
        if [ ! -d /var/www/html/torrent/plugins/${custom_plugin} ]; then
            ln -s /config/custom_plugins/${custom_plugin} /var/www/html/torrent/plugins/${custom_plugin}
        fi
    done
    ## Add custom themes
    [ "$(ls /config/custom_themes/)" ] && for custom_theme in $(ls /config/custom_themes); do
        if [ ! -d /var/www/html/torrent/theme/themes/${custom_theme} ]; then
            ln -s /config/custom_themes/${custom_theme} /var/www/html/torrent/theme/themes/${custom_theme}
        fi
    done
fi

sed -i -e 's|<PORT_RTORRENT>|'$PORT_RTORRENT'|g' -e 's|<DHT_RTORRENT>|'$DHT_RTORRENT'|g' -e 's|<WAN_IP>|'$(curl https://ipecho.net/plain 2>/dev/null)'|' /home/torrent/.rtorrent.rc

## externalize rtorrent configuration
if [ ! -e /config/rtorrent/.rtorrent.rc ]; then
    mv /home/torrent/.rtorrent.rc /config/rtorrent/.rtorrent.rc
    ln -s /config/rtorrent/.rtorrent.rc /home/torrent/.rtorrent.rc
else
    rtorrent -h | head -1 | grep "0.9.7"
    if [ $? -eq 0 ]; then
        grep -E "system.method.set_key|use_udp_trackers|peer_exchange" /config/rtorrent/.rtorrent.rc >/dev/null 2>&1
        [ $? -eq 0 ] && mv /config/rtorrent/.rtorrent.rc /config/rtorrent/.rtorrent.rc.old &&
            mv /home/torrent/.rtorrent.rc /config/rtorrent/.rtorrent.rc &&
            f_log INF "Migrate to 0.9.7 configuration format, backup file in /config/rtorrent/.rtorrent.rc.old"
        grep "system.daemon.set" /config/rtorrent/.rtorrent.rc >/dev/null 2>&1
        [ $? -ne 0 ] && echo "system.daemon.set = true" >>/config/rtorrent/.rtorrent.rc
        ln -sf /config/rtorrent/.rtorrent.rc /home/torrent/.rtorrent.rc
    fi
fi

## Filebot
if [ -e /filebot ]; then
    mkdir -p /data/Media/Movies
    mkdir -p /data/Media/TV
    mkdir -p /data/Media/Animes
    mkdir -p /data/Media/Music
    chown -R ${USER_NAME}:${GROUP_NAME} /filebot

    grep -E "method.set_key.*event.download.finished" /home/torrent/.rtorrent.rc >/dev/null 2>&1
    [ $? -ne 0 ] && echo 'method.set_key = event.download.finished,filebot,"execute2={/usr/local/bin/postdl,$d.base_path=,$d.name=,$d.custom1=}"' >>/home/torrent/.rtorrent.rc

    grep -E "method.set_key.*event.download.erased" /home/torrent/.rtorrent.rc >/dev/null 2>&1
    [ $? -ne 0 ] && echo 'method.set_key = event.download.erased,filebot_cleaner,"execute2=/usr/local/bin/postrm"' >>/home/torrent/.rtorrent.rc

    sed -e 's#<FILEBOT_RENAME_MOVIES>#'"$FILEBOT_RENAME_MOVIES"'#' \
        -e 's#<FILEBOT_RENAME_METHOD>#'"$FILEBOT_RENAME_METHOD"'#' \
        -e 's#<FILEBOT_RENAME_MUSICS>#'"$FILEBOT_RENAME_MUSICS"'#' \
        -e 's#<FILEBOT_RENAME_SERIES>#'"$FILEBOT_RENAME_SERIES"'#' \
        -e 's#<FILEBOT_RENAME_ANIMES>#'"$FILEBOT_RENAME_ANIMES"'#' -i /usr/local/bin/postdl

    chmod +x /usr/local/bin/post*
fi
f_log SUC "Generate configuration done"

# f_log INF "Install plowshare ..."
# if [ -e /home/torrent/.config/plowshare ]; then
#     su-exec ${USER_NAME}:${GROUP_NAME} plowmod --update > /dev/null 2>&1
#     res=$?
# else
#     su-exec ${USER_NAME}:${GROUP_NAME} plowmod --install > /dev/null 2>&1
#     res=$?
# fi
# [[ $? == 0 ]]; f_log SUC "Install plowshare done" || (f_log ERR "Install plowshare failed" && exit 1)

f_log INF "Apply system permissions ..."
mkdir -p /run/nginx
for folder in /var/www /home/torrent /var/lib/nginx /etc/php7 /etc/nginx /var/log /tmp /config /etc/s6.d; do
    find ${folder} ! -user torrent -exec chown ${USER_NAME}:${GROUP_NAME} {} \;
done
find /etc/s6.d -type f -exec chmod +x {} \;

f_log SUC "Apply system permissions done"

if [ "$DISABLE_PERM_DATA" == "false" ]; then
    f_log INF "Apply data permissions ..."
    find /data ! -user torrent -exec chown ${USER_NAME}:${GROUP_NAME} {} \;
    f_log SUC "Apply data permissions done"
fi

## fix path initplugins (if already have .rtorrent.rc)
grep -Eq " /nginx/" /home/torrent/.rtorrent.rc
if [ $? -eq 0 ]; then
    f_log INF "Fix path initplugins on .rtorrent.rc ..."
    sed -i "s# /nginx/# /var/#g" /home/torrent/.rtorrent.rc
    f_log SUC "Fix path initplugins done"
fi

rm -f /data/.session/rtorrent.lock

exec su-exec ${USER_NAME}:${GROUP_NAME} $@
